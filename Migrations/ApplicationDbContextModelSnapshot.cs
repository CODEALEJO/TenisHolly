// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TenisHolly.Data;

#nullable disable

namespace TenisHolly.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TenisHolly.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int>("ShoeId")
                        .HasColumnType("int")
                        .HasColumnName("shoe_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("store_id");

                    b.HasKey("Id");

                    b.HasIndex("ShoeId");

                    b.HasIndex("StoreId");

                    b.ToTable("inventoryes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantity = 50,
                            ShoeId = 1,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Quantity = 40,
                            ShoeId = 2,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 3,
                            Quantity = 30,
                            ShoeId = 3,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 4,
                            Quantity = 20,
                            ShoeId = 4,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 5,
                            Quantity = 25,
                            ShoeId = 5,
                            StoreId = 5
                        });
                });

            modelBuilder.Entity("TenisHolly.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FromStoreId")
                        .HasColumnType("int")
                        .HasColumnName("from_store_id");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("loan_date");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("return_date");

                    b.Property<int>("ShoeId")
                        .HasColumnType("int")
                        .HasColumnName("shoe_id");

                    b.Property<string>("Sizes")
                        .HasColumnType("longtext")
                        .HasColumnName("sizes");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("ToStoreId")
                        .HasColumnType("int")
                        .HasColumnName("to_store_id");

                    b.HasKey("Id");

                    b.HasIndex("FromStoreId");

                    b.HasIndex("ShoeId");

                    b.HasIndex("ToStoreId");

                    b.ToTable("loans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FromStoreId = 1,
                            LoanDate = new DateTime(2025, 1, 31, 14, 20, 59, 93, DateTimeKind.Local).AddTicks(5789),
                            Quantity = 5,
                            ShoeId = 1,
                            Sizes = "42",
                            Status = 0,
                            ToStoreId = 2
                        },
                        new
                        {
                            Id = 2,
                            FromStoreId = 2,
                            LoanDate = new DateTime(2025, 1, 31, 14, 20, 59, 93, DateTimeKind.Local).AddTicks(5793),
                            Quantity = 3,
                            ShoeId = 2,
                            Sizes = "38",
                            Status = 0,
                            ToStoreId = 3
                        },
                        new
                        {
                            Id = 3,
                            FromStoreId = 3,
                            LoanDate = new DateTime(2025, 1, 31, 14, 20, 59, 93, DateTimeKind.Local).AddTicks(5798),
                            Quantity = 2,
                            ShoeId = 3,
                            Sizes = "40",
                            Status = 1,
                            ToStoreId = 4
                        },
                        new
                        {
                            Id = 4,
                            FromStoreId = 4,
                            LoanDate = new DateTime(2025, 1, 31, 14, 20, 59, 93, DateTimeKind.Local).AddTicks(5800),
                            Quantity = 4,
                            ShoeId = 4,
                            Sizes = "39",
                            Status = 2,
                            ToStoreId = 5
                        },
                        new
                        {
                            Id = 5,
                            FromStoreId = 5,
                            LoanDate = new DateTime(2025, 1, 31, 14, 20, 59, 93, DateTimeKind.Local).AddTicks(5802),
                            Quantity = 1,
                            ShoeId = 5,
                            Sizes = "41",
                            Status = 0,
                            ToStoreId = 1
                        });
                });

            modelBuilder.Entity("TenisHolly.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("longtext")
                        .HasColumnName("payment_method");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Seller")
                        .HasColumnType("longtext")
                        .HasColumnName("seller");

                    b.Property<int>("ShoeId")
                        .HasColumnType("int")
                        .HasColumnName("shoe_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("store_id");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total");

                    b.HasKey("Id");

                    b.HasIndex("ShoeId");

                    b.HasIndex("StoreId");

                    b.ToTable("sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 1, 31, 14, 20, 59, 93, DateTimeKind.Local).AddTicks(5747),
                            PaymentMethod = "Tarjeta",
                            Quantity = 2,
                            Seller = "Carlos",
                            ShoeId = 1,
                            StoreId = 1,
                            Total = 241.00m
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 1, 31, 14, 20, 59, 93, DateTimeKind.Local).AddTicks(5762),
                            PaymentMethod = "Efectivo",
                            Quantity = 1,
                            Seller = "Andrea",
                            ShoeId = 2,
                            StoreId = 2,
                            Total = 95.99m
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2025, 1, 31, 14, 20, 59, 93, DateTimeKind.Local).AddTicks(5764),
                            PaymentMethod = "Transferencia",
                            Quantity = 3,
                            Seller = "Pedro",
                            ShoeId = 3,
                            StoreId = 3,
                            Total = 240.00m
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2025, 1, 31, 14, 20, 59, 93, DateTimeKind.Local).AddTicks(5766),
                            PaymentMethod = "Tarjeta",
                            Quantity = 1,
                            Seller = "Lucía",
                            ShoeId = 4,
                            StoreId = 4,
                            Total = 75.99m
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2025, 1, 31, 14, 20, 59, 93, DateTimeKind.Local).AddTicks(5767),
                            PaymentMethod = "Efectivo",
                            Quantity = 2,
                            Seller = "Miguel",
                            ShoeId = 5,
                            StoreId = 5,
                            Total = 220.00m
                        });
                });

            modelBuilder.Entity("TenisHolly.Models.Shoe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gender")
                        .HasColumnType("longtext")
                        .HasColumnName("gender");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<string>("Reference")
                        .HasColumnType("longtext")
                        .HasColumnName("reference");

                    b.Property<int>("Size")
                        .HasColumnType("int")
                        .HasColumnName("size");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("store_id");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("shoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gender = "Caballero",
                            Price = 120.50m,
                            Reference = "Nike AirMax",
                            Size = 42,
                            Stock = 10,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Gender = "Dama",
                            Price = 95.99m,
                            Reference = "Adidas Superstar",
                            Size = 38,
                            Stock = 15,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 3,
                            Gender = "Caballero",
                            Price = 80.00m,
                            Reference = "Puma Classic",
                            Size = 40,
                            Stock = 20,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 4,
                            Gender = "Dama",
                            Price = 75.99m,
                            Reference = "Reebok Runner",
                            Size = 39,
                            Stock = 12,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 5,
                            Gender = "Caballero",
                            Price = 110.00m,
                            Reference = "New Balance 574",
                            Size = 41,
                            Stock = 8,
                            StoreId = 5
                        });
                });

            modelBuilder.Entity("TenisHolly.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .HasColumnType("longtext")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "Centro Comercial Aventura",
                            Name = "Tienda Central"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Mall Norte Plaza",
                            Name = "Tienda Norte"
                        },
                        new
                        {
                            Id = 3,
                            Location = "Centro Comercial del Sur",
                            Name = "Tienda Sur"
                        },
                        new
                        {
                            Id = 4,
                            Location = "Plaza Este",
                            Name = "Tienda Este"
                        },
                        new
                        {
                            Id = 5,
                            Location = "Centro Comercial Oeste",
                            Name = "Tienda Oeste"
                        });
                });

            modelBuilder.Entity("TenisHolly.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext")
                        .HasColumnName("password_hash");

                    b.Property<string>("Role")
                        .HasColumnType("longtext")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            FullName = "Admin User",
                            PasswordHash = "hashedpassword1",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "juan.perez@example.com",
                            FullName = "Juan Pérez",
                            PasswordHash = "hashedpassword2",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3,
                            Email = "maria.gomez@example.com",
                            FullName = "María Gómez",
                            PasswordHash = "hashedpassword3",
                            Role = "User"
                        },
                        new
                        {
                            Id = 4,
                            Email = "carlos.lopez@example.com",
                            FullName = "Carlos López",
                            PasswordHash = "hashedpassword4",
                            Role = "Manager"
                        },
                        new
                        {
                            Id = 5,
                            Email = "ana.martinez@example.com",
                            FullName = "Ana Martínez",
                            PasswordHash = "hashedpassword5",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("TenisHolly.Models.Inventory", b =>
                {
                    b.HasOne("TenisHolly.Models.Shoe", "Shoe")
                        .WithMany("Inventories")
                        .HasForeignKey("ShoeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TenisHolly.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shoe");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("TenisHolly.Models.Loan", b =>
                {
                    b.HasOne("TenisHolly.Models.Store", "FromStore")
                        .WithMany("LoansGiven")
                        .HasForeignKey("FromStoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TenisHolly.Models.Shoe", "Shoe")
                        .WithMany("Loans")
                        .HasForeignKey("ShoeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TenisHolly.Models.Store", "ToStore")
                        .WithMany("LoansReceived")
                        .HasForeignKey("ToStoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromStore");

                    b.Navigation("Shoe");

                    b.Navigation("ToStore");
                });

            modelBuilder.Entity("TenisHolly.Models.Sale", b =>
                {
                    b.HasOne("TenisHolly.Models.Shoe", "Shoe")
                        .WithMany("Sales")
                        .HasForeignKey("ShoeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TenisHolly.Models.Store", "Store")
                        .WithMany("Sales")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shoe");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("TenisHolly.Models.Shoe", b =>
                {
                    b.HasOne("TenisHolly.Models.Store", "Store")
                        .WithMany("Shoes")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("TenisHolly.Models.Shoe", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Loans");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("TenisHolly.Models.Store", b =>
                {
                    b.Navigation("LoansGiven");

                    b.Navigation("LoansReceived");

                    b.Navigation("Sales");

                    b.Navigation("Shoes");
                });
#pragma warning restore 612, 618
        }
    }
}
